openapi: 3.0.3
info:
  title: Cart API
  version: "1.0"
servers:
  - url: http://localhost:3000/api/v1
tags:
  - name: Cart
paths:
  /cart:
    post:
      tags: 
        - Cart
      summary: Create the cart
      description: Create the cart by specifying ecommerce and customer. Cart will be created with status "created",
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCartRequest'
      responses:
        "201": 
          description: Cart created
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/NewCartResponse'
        "400":
          description: "Bad request"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags: 
        - Cart
      summary: Update items in the cart
      description: Adding items to the cart will change the status to "building",
      requestBody:
        required: true
        description: List of items to update the cart
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItemsUpdateRequest'
      responses:
        "200": 
          description: "succesfull"
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/CartResponse'
        "400":
          description: "Bad request"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
  /cart/{ecommerce_id}/{customer_id}:
    get:
      tags: 
        - Cart
      summary: Get the Cart
      description: Get the cart,
      parameters: 
        - name: ecommerce_id
          in: path
          description: The id of the ecommerce
          required: true
          schema: 
            type: integer
        - name: customer_id
          in: path
          description: The id of the customer
          required: true
          schema: 
            type: integer
      responses:
        "200": 
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartResponse'
        "400":
          description: "Bad request"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
  /cart/checkout:  
    put:
      tags: 
        - Cart
      summary: Checkout the Cart
      description: Checkout the cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCartRequest'
      responses:
        "204": 
          description: Cart checked out
        "400":
          description: "Bad request"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    IdSchema: 
      type: string
      format: uuid

    NewCartRequest:
      type: object
      properties:
        ecommerce_id:
          $ref: '#/components/schemas/IdSchema'
        customer_id: 
          $ref: '#/components/schemas/IdSchema'
          
    NewCartResponse:
      type: object
      properties:
        ecommerce_id: 
          $ref: '#/components/schemas/IdSchema'
        customer_id: 
          $ref: '#/components/schemas/IdSchema'
        created_at:
          type: string
          format: date-time
          description: The date of cart creation
        updated_at:
          type: string
          format: date-time
          description: The date of cart creation
        status:
          type: string
          enum: [created, building, checkout]
          description: The status of the cart

    CartResponse:
      type: object
      properties:
        ecommerce_id: 
          $ref: '#/components/schemas/IdSchema'
        customer_id: 
          $ref: '#/components/schemas/IdSchema'
        created_at:
          type: string
          format: date-time
          description: The date of cart creation
        updated_at:
          type: string
          format: date-time
          description: The date of cart update
        status:
          type: string
          enum: [created, building, checkout]
          description: The status of the cart
        total_price: 
          type: number
          multipleOf: 0.01
          description: Total price of the cart
        item_list:
          type: array
          items: 
            $ref: '#/components/schemas/Item'

    CartItemsUpdateRequest:
      type: object
      properties:
        item_list:
          type: array
          items:
            $ref: '#/components/schemas/Item'
    Item:
      type: object
      properties:
        product_sku: 
          type: string
        product_name: 
          type: string
        file_type: 
          type: string
        quantity: 
          type: integer
        delivery_date:
          type: string
          format: date-time
        unit_price:
          type: number
          multipleOf: 0.01
        total_price:
          type: number
          multipleOf: 0.01
    ErrorResponse: 
      type: object
      properties:
        message: 
          type: string